# -*- coding: utf-8 -*-
"""Muhammad Raihan Rakasiwi- IBM Skills build

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1z_Jp3TcjkGC_yug_iKp7oDRwEkMrhNyc
"""

# =============================
# 1. Install library
# =============================
!pip install replicate langchain_community
import matplotlib.pyplot as plt
import os
import pandas as pd
from google.colab import files
from langchain_community.llms import Replicate

# =============================
# 2. Upload file CSV Tokopedia
# =============================
print("Silakan upload file tokopedia-product-reviews-2019.csv ...")
uploaded = files.upload()

# Pastikan nama file sesuai
file_path = "tokopedia-product-reviews-2019.csv"
df = pd.read_csv(file_path, encoding="utf-8")

print("Jumlah data:", len(df))
print("Kolom dataset:", df.columns.tolist())
print(df.head())

# =============================
# 3. Sampling data
# =============================
# Hanya ambil kolom penting
df = df.dropna(subset=["text", "rating"])
sample_df = df.sample(10, random_state=42)  # ambil 10 contoh untuk demo

# =============================
# 4. Setup Granite (Replicate)
# =============================
# Ambil API token dari Colab secret
from google.colab import userdata
api_token = userdata.get("api_token")

# Masukkan token ke environment
os.environ["REPLICATE_API_TOKEN"] = api_token

# Define Granite LLM
llm = Replicate(model="ibm-granite/granite-3.3-8b-instruct")

# =============================
# 5. Klasifikasi + Summarization
# =============================
results = []
for idx, row in sample_df.iterrows():
    text = row['text']
    rating = row['rating']

    # Label manual dari rating
    if rating >= 4:
        true_label = "POSITIVE"
    elif rating <= 2:
        true_label = "NEGATIVE"
    else:
        true_label = "NEUTRAL"

    prompt = f"""
    Berikut ulasan produk dari Tokopedia (bahasa Indonesia):

    "{text}"

    Tugas:
    1. Tentukan sentimen ulasan ini: POSITIF, NEGATIF, atau NETRAL.
    2. Buat ringkasan ulasan dalam 1 kalimat singkat.
    """

    output = llm.invoke(prompt)

    results.append({
        "Review (potongan)": text[:100] + "...",
        "Rating": rating,
        "True_Label": true_label,
        "Granite_Output": output
    })

# =============================
# 6. Tampilkan hasil
# =============================
result_df = pd.DataFrame(results)
print(result_df.head(10))

# Simpan hasil ke CSV
result_df.to_csv("hasil_tokopedia_granite.csv", index=False)
print("Hasil sudah disimpan ke hasil_tokopedia_granite.csv")

from google.colab import files
files.download("hasil_tokopedia_granite.csv")

# =============================
# 7. Buat Bar & Pie chart
# =============================

# Cek kolom yang ada di dataset mentah
print("Kolom tersedia (df):", df.columns.tolist())
print("Kolom tersedia (result_df):", result_df.columns.tolist())

# --- Distribusi Rating (dari dataset mentah) ---
rating_counts = df["rating"].value_counts().sort_index()

plt.figure(figsize=(8,6))
rating_counts.plot(kind='bar', color='skyblue')
plt.title("Distribusi Rating Review Tokopedia")
plt.xlabel("Rating (1â€“5)")
plt.ylabel("Jumlah Review")
plt.xticks(rotation=0)
plt.savefig("rating_distribution.png")
plt.show()

# --- Distribusi Sentimen (dari hasil Granite) ---
if "True_Label" in result_df.columns:
    sentiment_counts = result_df["True_Label"].value_counts()

    # PIE CHART
    plt.figure(figsize=(6,6))
    plt.pie(sentiment_counts,
            labels=sentiment_counts.index,
            autopct='%1.1f%%',
            startangle=140)
    plt.title("Distribusi Sentimen Review Tokopedia")
    plt.savefig("sentiment_distribution.png")
    plt.show()

    # BAR CHART
    plt.figure(figsize=(8,6))
    sentiment_counts.plot(kind='bar', color='lightgreen')
    plt.title("Jumlah Review per Kategori Sentimen (Granite vs Rating)")
    plt.xlabel("Sentimen")
    plt.ylabel("Jumlah Review")
    plt.xticks(rotation=0)
    plt.savefig("sentiment_bar.png")
    plt.show()
else:
    print("Kolom sentimen tidak ditemukan di result_df, hanya chart rating yang dibuat.")