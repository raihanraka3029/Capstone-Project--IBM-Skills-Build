{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1z_Jp3TcjkGC_yug_iKp7oDRwEkMrhNyc","timestamp":1758470024264}],"authorship_tag":"ABX9TyMysTkZjyFeenBUiSOa5aaw"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"eL6Mn42VIDb8","executionInfo":{"status":"ok","timestamp":1758467092592,"user_tz":-420,"elapsed":26499,"user":{"displayName":"Raihan Rakasiwi","userId":"05609640703150706130"}},"outputId":"bdf42af4-0253-44cf-c3f3-6f5faeaf0cf0"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: replicate in /usr/local/lib/python3.12/dist-packages (1.0.7)\n","Requirement already satisfied: langchain_community in /usr/local/lib/python3.12/dist-packages (0.3.29)\n","Requirement already satisfied: httpx<1,>=0.21.0 in /usr/local/lib/python3.12/dist-packages (from replicate) (0.28.1)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.12/dist-packages (from replicate) (25.0)\n","Requirement already satisfied: pydantic>1.10.7 in /usr/local/lib/python3.12/dist-packages (from replicate) (2.11.7)\n","Requirement already satisfied: typing_extensions>=4.5.0 in /usr/local/lib/python3.12/dist-packages (from replicate) (4.15.0)\n","Requirement already satisfied: langchain-core<2.0.0,>=0.3.75 in /usr/local/lib/python3.12/dist-packages (from langchain_community) (0.3.75)\n","Requirement already satisfied: langchain<2.0.0,>=0.3.27 in /usr/local/lib/python3.12/dist-packages (from langchain_community) (0.3.27)\n","Requirement already satisfied: SQLAlchemy<3,>=1.4 in /usr/local/lib/python3.12/dist-packages (from langchain_community) (2.0.43)\n","Requirement already satisfied: requests<3,>=2.32.5 in /usr/local/lib/python3.12/dist-packages (from langchain_community) (2.32.5)\n","Requirement already satisfied: PyYAML>=5.3 in /usr/local/lib/python3.12/dist-packages (from langchain_community) (6.0.2)\n","Requirement already satisfied: aiohttp<4.0.0,>=3.8.3 in /usr/local/lib/python3.12/dist-packages (from langchain_community) (3.12.15)\n","Requirement already satisfied: tenacity!=8.4.0,<10,>=8.1.0 in /usr/local/lib/python3.12/dist-packages (from langchain_community) (8.5.0)\n","Requirement already satisfied: dataclasses-json<0.7,>=0.6.7 in /usr/local/lib/python3.12/dist-packages (from langchain_community) (0.6.7)\n","Requirement already satisfied: pydantic-settings<3.0.0,>=2.10.1 in /usr/local/lib/python3.12/dist-packages (from langchain_community) (2.10.1)\n","Requirement already satisfied: langsmith>=0.1.125 in /usr/local/lib/python3.12/dist-packages (from langchain_community) (0.4.27)\n","Requirement already satisfied: httpx-sse<1.0.0,>=0.4.0 in /usr/local/lib/python3.12/dist-packages (from langchain_community) (0.4.1)\n","Requirement already satisfied: numpy>=1.26.2 in /usr/local/lib/python3.12/dist-packages (from langchain_community) (2.0.2)\n","Requirement already satisfied: aiohappyeyeballs>=2.5.0 in /usr/local/lib/python3.12/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain_community) (2.6.1)\n","Requirement already satisfied: aiosignal>=1.4.0 in /usr/local/lib/python3.12/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain_community) (1.4.0)\n","Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.12/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain_community) (25.3.0)\n","Requirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.12/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain_community) (1.7.0)\n","Requirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.12/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain_community) (6.6.4)\n","Requirement already satisfied: propcache>=0.2.0 in /usr/local/lib/python3.12/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain_community) (0.3.2)\n","Requirement already satisfied: yarl<2.0,>=1.17.0 in /usr/local/lib/python3.12/dist-packages (from aiohttp<4.0.0,>=3.8.3->langchain_community) (1.20.1)\n","Requirement already satisfied: marshmallow<4.0.0,>=3.18.0 in /usr/local/lib/python3.12/dist-packages (from dataclasses-json<0.7,>=0.6.7->langchain_community) (3.26.1)\n","Requirement already satisfied: typing-inspect<1,>=0.4.0 in /usr/local/lib/python3.12/dist-packages (from dataclasses-json<0.7,>=0.6.7->langchain_community) (0.9.0)\n","Requirement already satisfied: anyio in /usr/local/lib/python3.12/dist-packages (from httpx<1,>=0.21.0->replicate) (4.10.0)\n","Requirement already satisfied: certifi in /usr/local/lib/python3.12/dist-packages (from httpx<1,>=0.21.0->replicate) (2025.8.3)\n","Requirement already satisfied: httpcore==1.* in /usr/local/lib/python3.12/dist-packages (from httpx<1,>=0.21.0->replicate) (1.0.9)\n","Requirement already satisfied: idna in /usr/local/lib/python3.12/dist-packages (from httpx<1,>=0.21.0->replicate) (3.10)\n","Requirement already satisfied: h11>=0.16 in /usr/local/lib/python3.12/dist-packages (from httpcore==1.*->httpx<1,>=0.21.0->replicate) (0.16.0)\n","Requirement already satisfied: langchain-text-splitters<1.0.0,>=0.3.9 in /usr/local/lib/python3.12/dist-packages (from langchain<2.0.0,>=0.3.27->langchain_community) (0.3.11)\n","Requirement already satisfied: jsonpatch<2.0,>=1.33 in /usr/local/lib/python3.12/dist-packages (from langchain-core<2.0.0,>=0.3.75->langchain_community) (1.33)\n","Requirement already satisfied: orjson>=3.9.14 in /usr/local/lib/python3.12/dist-packages (from langsmith>=0.1.125->langchain_community) (3.11.3)\n","Requirement already satisfied: requests-toolbelt>=1.0.0 in /usr/local/lib/python3.12/dist-packages (from langsmith>=0.1.125->langchain_community) (1.0.0)\n","Requirement already satisfied: zstandard>=0.23.0 in /usr/local/lib/python3.12/dist-packages (from langsmith>=0.1.125->langchain_community) (0.24.0)\n","Requirement already satisfied: annotated-types>=0.6.0 in /usr/local/lib/python3.12/dist-packages (from pydantic>1.10.7->replicate) (0.7.0)\n","Requirement already satisfied: pydantic-core==2.33.2 in /usr/local/lib/python3.12/dist-packages (from pydantic>1.10.7->replicate) (2.33.2)\n","Requirement already satisfied: typing-inspection>=0.4.0 in /usr/local/lib/python3.12/dist-packages (from pydantic>1.10.7->replicate) (0.4.1)\n","Requirement already satisfied: python-dotenv>=0.21.0 in /usr/local/lib/python3.12/dist-packages (from pydantic-settings<3.0.0,>=2.10.1->langchain_community) (1.1.1)\n","Requirement already satisfied: charset_normalizer<4,>=2 in /usr/local/lib/python3.12/dist-packages (from requests<3,>=2.32.5->langchain_community) (3.4.3)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.12/dist-packages (from requests<3,>=2.32.5->langchain_community) (2.5.0)\n","Requirement already satisfied: greenlet>=1 in /usr/local/lib/python3.12/dist-packages (from SQLAlchemy<3,>=1.4->langchain_community) (3.2.4)\n","Requirement already satisfied: jsonpointer>=1.9 in /usr/local/lib/python3.12/dist-packages (from jsonpatch<2.0,>=1.33->langchain-core<2.0.0,>=0.3.75->langchain_community) (3.0.0)\n","Requirement already satisfied: mypy-extensions>=0.3.0 in /usr/local/lib/python3.12/dist-packages (from typing-inspect<1,>=0.4.0->dataclasses-json<0.7,>=0.6.7->langchain_community) (1.1.0)\n","Requirement already satisfied: sniffio>=1.1 in /usr/local/lib/python3.12/dist-packages (from anyio->httpx<1,>=0.21.0->replicate) (1.3.1)\n","Silakan upload file tokopedia-product-reviews-2019.csv ...\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-56125b01-c056-4ce7-ba57-427b2d9a9c51\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-56125b01-c056-4ce7-ba57-427b2d9a9c51\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script>// Copyright 2017 Google LLC\n","//\n","// Licensed under the Apache License, Version 2.0 (the \"License\");\n","// you may not use this file except in compliance with the License.\n","// You may obtain a copy of the License at\n","//\n","//      http://www.apache.org/licenses/LICENSE-2.0\n","//\n","// Unless required by applicable law or agreed to in writing, software\n","// distributed under the License is distributed on an \"AS IS\" BASIS,\n","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","// See the License for the specific language governing permissions and\n","// limitations under the License.\n","\n","/**\n"," * @fileoverview Helpers for google.colab Python module.\n"," */\n","(function(scope) {\n","function span(text, styleAttributes = {}) {\n","  const element = document.createElement('span');\n","  element.textContent = text;\n","  for (const key of Object.keys(styleAttributes)) {\n","    element.style[key] = styleAttributes[key];\n","  }\n","  return element;\n","}\n","\n","// Max number of bytes which will be uploaded at a time.\n","const MAX_PAYLOAD_SIZE = 100 * 1024;\n","\n","function _uploadFiles(inputId, outputId) {\n","  const steps = uploadFilesStep(inputId, outputId);\n","  const outputElement = document.getElementById(outputId);\n","  // Cache steps on the outputElement to make it available for the next call\n","  // to uploadFilesContinue from Python.\n","  outputElement.steps = steps;\n","\n","  return _uploadFilesContinue(outputId);\n","}\n","\n","// This is roughly an async generator (not supported in the browser yet),\n","// where there are multiple asynchronous steps and the Python side is going\n","// to poll for completion of each step.\n","// This uses a Promise to block the python side on completion of each step,\n","// then passes the result of the previous step as the input to the next step.\n","function _uploadFilesContinue(outputId) {\n","  const outputElement = document.getElementById(outputId);\n","  const steps = outputElement.steps;\n","\n","  const next = steps.next(outputElement.lastPromiseValue);\n","  return Promise.resolve(next.value.promise).then((value) => {\n","    // Cache the last promise value to make it available to the next\n","    // step of the generator.\n","    outputElement.lastPromiseValue = value;\n","    return next.value.response;\n","  });\n","}\n","\n","/**\n"," * Generator function which is called between each async step of the upload\n"," * process.\n"," * @param {string} inputId Element ID of the input file picker element.\n"," * @param {string} outputId Element ID of the output display.\n"," * @return {!Iterable<!Object>} Iterable of next steps.\n"," */\n","function* uploadFilesStep(inputId, outputId) {\n","  const inputElement = document.getElementById(inputId);\n","  inputElement.disabled = false;\n","\n","  const outputElement = document.getElementById(outputId);\n","  outputElement.innerHTML = '';\n","\n","  const pickedPromise = new Promise((resolve) => {\n","    inputElement.addEventListener('change', (e) => {\n","      resolve(e.target.files);\n","    });\n","  });\n","\n","  const cancel = document.createElement('button');\n","  inputElement.parentElement.appendChild(cancel);\n","  cancel.textContent = 'Cancel upload';\n","  const cancelPromise = new Promise((resolve) => {\n","    cancel.onclick = () => {\n","      resolve(null);\n","    };\n","  });\n","\n","  // Wait for the user to pick the files.\n","  const files = yield {\n","    promise: Promise.race([pickedPromise, cancelPromise]),\n","    response: {\n","      action: 'starting',\n","    }\n","  };\n","\n","  cancel.remove();\n","\n","  // Disable the input element since further picks are not allowed.\n","  inputElement.disabled = true;\n","\n","  if (!files) {\n","    return {\n","      response: {\n","        action: 'complete',\n","      }\n","    };\n","  }\n","\n","  for (const file of files) {\n","    const li = document.createElement('li');\n","    li.append(span(file.name, {fontWeight: 'bold'}));\n","    li.append(span(\n","        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n","        `last modified: ${\n","            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n","                                    'n/a'} - `));\n","    const percent = span('0% done');\n","    li.appendChild(percent);\n","\n","    outputElement.appendChild(li);\n","\n","    const fileDataPromise = new Promise((resolve) => {\n","      const reader = new FileReader();\n","      reader.onload = (e) => {\n","        resolve(e.target.result);\n","      };\n","      reader.readAsArrayBuffer(file);\n","    });\n","    // Wait for the data to be ready.\n","    let fileData = yield {\n","      promise: fileDataPromise,\n","      response: {\n","        action: 'continue',\n","      }\n","    };\n","\n","    // Use a chunked sending to avoid message size limits. See b/62115660.\n","    let position = 0;\n","    do {\n","      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n","      const chunk = new Uint8Array(fileData, position, length);\n","      position += length;\n","\n","      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n","      yield {\n","        response: {\n","          action: 'append',\n","          file: file.name,\n","          data: base64,\n","        },\n","      };\n","\n","      let percentDone = fileData.byteLength === 0 ?\n","          100 :\n","          Math.round((position / fileData.byteLength) * 100);\n","      percent.textContent = `${percentDone}% done`;\n","\n","    } while (position < fileData.byteLength);\n","  }\n","\n","  // All done.\n","  yield {\n","    response: {\n","      action: 'complete',\n","    }\n","  };\n","}\n","\n","scope.google = scope.google || {};\n","scope.google.colab = scope.google.colab || {};\n","scope.google.colab._files = {\n","  _uploadFiles,\n","  _uploadFilesContinue,\n","};\n","})(self);\n","</script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving hasil_tokopedia_granite.csv to hasil_tokopedia_granite (2).csv\n","Jumlah data: 40607\n","Kolom dataset: ['Unnamed: 0', 'text', 'rating', 'category', 'product_name', 'product_id', 'sold', 'shop_id', 'product_url']\n","   Unnamed: 0                                             text  rating  \\\n","0           1           Barang sesuai pesanan dan cepat sampai       5   \n","1           2                         Barang bagus harga murah       5   \n","2           3  Paket rapi...mantap....cepat....sampe ke tujuan       5   \n","3           4                       ya saya puas dgn barangnya       5   \n","4           5                     Responya luar biasa b mantap       5   \n","\n","      category                                       product_name  product_id  \\\n","0  pertukangan  Staples Dekorasi Staples Kayu + Refill 8mm - S...   418660637   \n","1  pertukangan  STAPLE GUN ATS 3 WAY TACKER - STAPLES JOK TEMB...   416032545   \n","2  pertukangan  STAPLE GUN ATS 3 WAY TACKER - STAPLES JOK TEMB...   416032545   \n","3  pertukangan  ALAT STAPLES TEMBAK &#40;AIR NAILER GUN&#41; O...   102279869   \n","4  pertukangan  Isi Refill Staples Jok Kulit Motor / Staple Gu...   190679689   \n","\n","  sold  shop_id                                        product_url  \n","0    1  1740837  https://www.tokopedia.com/shakaonline87/staple...  \n","1   11  1477109  https://www.tokopedia.com/juraganperkakas/stap...  \n","2   11  1477109  https://www.tokopedia.com/juraganperkakas/stap...  \n","3    5   771395  https://www.tokopedia.com/kamarmesin/alat-stap...  \n","4  787   969999  https://www.tokopedia.com/mitrapersada/isi-ref...  \n","                                   Review (potongan)  Rating True_Label  \\\n","0                     Packing nya rapih dan cepat...       5   POSITIVE   \n","1          terima kasih,, barang telah diterima,,...       5   POSITIVE   \n","2               Barang bagus sesuai di gambar.......       5   POSITIVE   \n","3            fast respon, nice seller and product...       5   POSITIVE   \n","4      makasih brng sdh aku trima dngn selamat......       5   POSITIVE   \n","5  Lumayan buat gantungan kunci motor, bahannya b...       5   POSITIVE   \n","6             Barangnya baguuus punyaaaa maaaaaaa...       5   POSITIVE   \n","7  ALHAMDULILLAH...pesanan saya sdh sampai....man...       4   POSITIVE   \n","8                  sesuai.......bagus.........tks...       5   POSITIVE   \n","9               Barang sudah diterima dengan baik...       5   POSITIVE   \n","\n","                                      Granite_Output  \n","0  1. Sentimen ulasan tersebut adalah POSITIF, ka...  \n","1  1. Sentimen ulasan tersebut dapat dikenakan se...  \n","2  1. Sentimen ulasan tersebut adalah POSITIF.\\n2...  \n","3  1. Sentimen ulasan tersebut dapat dikenakan se...  \n","4  1. Sentimen ulasan tersebut adalah POSITIF.\\n2...  \n","5  1. Sentimen ulasan tersebut dapat dikategorika...  \n","6  1. Sentimen ulasan tersebut adalah POSITIF.\\n2...  \n","7  1. Sentimen ulasan tersebut adalah POSITIF.\\n2...  \n","8  1. Sentimen ulasan tersebut dapat dikategorika...  \n","9  1. Sentimen ulasan tersebut adalah POSITIF.\\n2...  \n","Hasil sudah disimpan ke hasil_tokopedia_granite.csv\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_0e64666c-5816-45d5-adfd-44402b15ed0c\", \"hasil_tokopedia_granite.csv\", 2535)"]},"metadata":{}}],"source":["# =============================\n","# 1. Install library\n","# =============================\n","!pip install replicate langchain_community\n","import matplotlib.pyplot as plt\n","import os\n","import pandas as pd\n","from google.colab import files\n","from langchain_community.llms import Replicate\n","\n","# =============================\n","# 2. Upload file CSV Tokopedia\n","# =============================\n","print(\"Silakan upload file tokopedia-product-reviews-2019.csv ...\")\n","uploaded = files.upload()\n","\n","# Pastikan nama file sesuai\n","file_path = \"tokopedia-product-reviews-2019.csv\"\n","df = pd.read_csv(file_path, encoding=\"utf-8\")\n","\n","print(\"Jumlah data:\", len(df))\n","print(\"Kolom dataset:\", df.columns.tolist())\n","print(df.head())\n","\n","# =============================\n","# 3. Sampling data\n","# =============================\n","# Hanya ambil kolom penting\n","df = df.dropna(subset=[\"text\", \"rating\"])\n","sample_df = df.sample(10, random_state=42)  # ambil 10 contoh untuk demo\n","\n","# =============================\n","# 4. Setup Granite (Replicate)\n","# =============================\n","# Ambil API token dari Colab secret\n","from google.colab import userdata\n","api_token = userdata.get(\"api_token\")\n","\n","# Masukkan token ke environment\n","os.environ[\"REPLICATE_API_TOKEN\"] = api_token\n","\n","# Define Granite LLM\n","llm = Replicate(model=\"ibm-granite/granite-3.3-8b-instruct\")\n","\n","# =============================\n","# 5. Klasifikasi + Summarization\n","# =============================\n","results = []\n","for idx, row in sample_df.iterrows():\n","    text = row['text']\n","    rating = row['rating']\n","\n","    # Label manual dari rating\n","    if rating >= 4:\n","        true_label = \"POSITIVE\"\n","    elif rating <= 2:\n","        true_label = \"NEGATIVE\"\n","    else:\n","        true_label = \"NEUTRAL\"\n","\n","    prompt = f\"\"\"\n","    Berikut ulasan produk dari Tokopedia (bahasa Indonesia):\n","\n","    \"{text}\"\n","\n","    Tugas:\n","    1. Tentukan sentimen ulasan ini: POSITIF, NEGATIF, atau NETRAL.\n","    2. Buat ringkasan ulasan dalam 1 kalimat singkat.\n","    \"\"\"\n","\n","    output = llm.invoke(prompt)\n","\n","    results.append({\n","        \"Review (potongan)\": text[:100] + \"...\",\n","        \"Rating\": rating,\n","        \"True_Label\": true_label,\n","        \"Granite_Output\": output\n","    })\n","\n","# =============================\n","# 6. Tampilkan hasil\n","# =============================\n","result_df = pd.DataFrame(results)\n","print(result_df.head(10))\n","\n","# Simpan hasil ke CSV\n","result_df.to_csv(\"hasil_tokopedia_granite.csv\", index=False)\n","print(\"Hasil sudah disimpan ke hasil_tokopedia_granite.csv\")\n","\n","from google.colab import files\n","files.download(\"hasil_tokopedia_granite.csv\")"]},{"cell_type":"code","source":["# =============================\n","# 7. Buat Bar & Pie chart\n","# =============================\n","\n","# Cek kolom yang ada di dataset mentah\n","print(\"Kolom tersedia (df):\", df.columns.tolist())\n","print(\"Kolom tersedia (result_df):\", result_df.columns.tolist())\n","\n","# --- Distribusi Rating (dari dataset mentah) ---\n","rating_counts = df[\"rating\"].value_counts().sort_index()\n","\n","plt.figure(figsize=(8,6))\n","rating_counts.plot(kind='bar', color='skyblue')\n","plt.title(\"Distribusi Rating Review Tokopedia\")\n","plt.xlabel(\"Rating (1–5)\")\n","plt.ylabel(\"Jumlah Review\")\n","plt.xticks(rotation=0)\n","plt.savefig(\"rating_distribution.png\")\n","plt.show()\n","\n","# --- Distribusi Sentimen (dari hasil Granite) ---\n","if \"True_Label\" in result_df.columns:\n","    sentiment_counts = result_df[\"True_Label\"].value_counts()\n","\n","    # PIE CHART\n","    plt.figure(figsize=(6,6))\n","    plt.pie(sentiment_counts,\n","            labels=sentiment_counts.index,\n","            autopct='%1.1f%%',\n","            startangle=140)\n","    plt.title(\"Distribusi Sentimen Review Tokopedia\")\n","    plt.savefig(\"sentiment_distribution.png\")\n","    plt.show()\n","\n","    # BAR CHART\n","    plt.figure(figsize=(8,6))\n","    sentiment_counts.plot(kind='bar', color='lightgreen')\n","    plt.title(\"Jumlah Review per Kategori Sentimen (Granite vs Rating)\")\n","    plt.xlabel(\"Sentimen\")\n","    plt.ylabel(\"Jumlah Review\")\n","    plt.xticks(rotation=0)\n","    plt.savefig(\"sentiment_bar.png\")\n","    plt.show()\n","else:\n","    print(\"Kolom sentimen tidak ditemukan di result_df, hanya chart rating yang dibuat.\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"VBxWF4Ge0ToK","executionInfo":{"status":"ok","timestamp":1758467301528,"user_tz":-420,"elapsed":539,"user":{"displayName":"Raihan Rakasiwi","userId":"05609640703150706130"}},"outputId":"c2a8588e-cd97-4fc4-cc0f-3a3b23d4895d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Kolom tersedia (df): ['Unnamed: 0', 'text', 'rating', 'category', 'product_name', 'product_id', 'sold', 'shop_id', 'product_url']\n","Kolom tersedia (result_df): ['Review (potongan)', 'Rating', 'True_Label', 'Granite_Output', 'Granite_Label']\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 600x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}]}